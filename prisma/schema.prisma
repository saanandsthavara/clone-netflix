// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  // we need to write the configuration which is combination of prisma and mongodb
  id             String     @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  image          String?
  email          String?    @unique
  emailVerified  DateTime?
  hashedPassword String?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  sessions       Sessions[]
  account        Account[]
  favoriteIds    String[]   @db.ObjectId
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  // creating foreign key
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  // creating user relation from user schema
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Sessions {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  session_token String   @unique
  userId        String   @db.ObjectId
  expries       DateTime
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token])
}

model Movie {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  description  String
  videoUrl     String
  thumbnailUrl String
  genre        String
  rating       Int
  duration     String
}
